{{/* Default static values */}}
{{ $gpgId := "061DF935B288405FF6B906169496153E284399EF" }}
{{ $agePubKey := "age1wezwdvug6rdnwedvw8tk7npjm2rlmmewukxdat8v5y5garwvgdeq3ww5m9" }}
{{ $sshId := "ssh-ed25519 AAAAC3NzaC1lZDI1NTE5AAAAINXPGUiiFFBzqutbhNqi5RjykdlwvdFveB/XkSdg0BAM" }}
{{ $email := "cwel@cwel.sh" -}}

{{/* Default dynamic values */}}

{{ $shell := "" }}
{{ $theme := "dark" }}
{{ $catppuccinLightFlavour := "latte" }}
{{ $catppuccinDarkFlavour := "mocha" }}
{{ $catppuccinAccentColor := "teal" }}
{{- $isCloud := false -}}
{{- $isContainer := false -}}
{{- $isWSL := false -}}
{{- $isHeadless := false -}}
{{ $isLaptop := false }}
{{ $opType := "service" }}

{{ $themes := list
     "dark"
     "light"
}}

{{ $catppuccinFlavors := list
     "latte"
     "frappe"
     "macchiato"
     "mocha"
}}

{{ $catppuccinAccentColors := list
     "blue"
     "flamingo"
     "green"
     "lavender"
     "maroon"
     "mauve"
     "peach"
     "pink"
     "red"
     "rosewater"
     "sapphire"
     "sky"
     "teal"
     "yellow"
}}

{{ $opTypeChoices := list
      "account"
      "service"
      "connect"
}}

{{/* Checks */}}

{{/* if its a linux box */}}
{{ $osId := .chezmoi.os }}
{{ if (and (eq .chezmoi.os "linux") (hasKey .chezmoi.osRelease "id")) }}
  {{ $osId = printf "%s-%s" .chezmoi.os .chezmoi.osRelease.id }}
{{ end }}

{{/* if running in WSL */}}
{{ if and (eq .chezmoi.os "linux") (or (stat "/proc/sys/fs/binfmt_misc/WSLInterop") (contains "microsoft" (output "uname" "-r" | lower))) }}
  {{ $isWSL = true }}
{{ end }}

{{/* if system is headless */}}
{{ if and (eq .chezmoi.os "linux") (or
     (not (or (env "DISPLAY") (env "WAYLAND_DISPLAY") (env "XDG_SESSION_TYPE")))
     (eq (env "DISPLAY") "wini:0")
     (contains "localhost" (env "DISPLAY"))
     (hasPrefix ":" (env "DISPLAY"))
   ) }}
  {{ $isHeadless = true }}
{{ end }}

{{/* if its a windows box */}}
{{ if eq $osId "windows" }}
  {{ $shell = "pwsh" }}
{{ else }}
  {{ $shell = "zsh" }}
{{ end }}

{{/* if running in a container */}}
{{ if eq .chezmoi.os "linux" }}
  {{ if or (stat "/.dockerenv") (contains "docker" (output "cat" "/proc/1/cgroup" | lower)) (contains "lxc" (output "cat" "/proc/1/cgroup" | lower)) }}
    {{ $isContainer = true }}
  {{ end }}
{{ end }}

{{/* if running in a cloud environment */}}
{{ if eq .chezmoi.os "linux" }}
  {{ if or (stat "/var/lib/cloud/instance") (stat "/var/lib/cloud/data") (stat "/proc/xen") (stat "/sys/hypervisor/uuid") }}
    {{ $isCloud = true }}
  {{ else if or (stat "/sys/class/dmi/id/product_uuid") (stat "/sys/class/dmi/id/product_name") }}
    {{ $dmiProduct := (output "cat" "/sys/class/dmi/id/product_name" | lower) }}
    {{ if or (contains "amazon" $dmiProduct) (contains "google" $dmiProduct) (contains "azure" $dmiProduct) (contains "digitalocean" $dmiProduct) }}
      {{ $isCloud = true }}
    {{ end }}
  {{ end }}
{{ end }}

{{ if lookPath "hostnamectl" }}
  {{ if eq (output "hostnamectl" "chassis") "laptop" }}
    {{ $isLaptop = true }}
  {{ end }}
{{ else if lookPath "wmic" }}
  {{ if eq (output "wmic" "computersystem" "get" "PCSystemType" "/VALUE" | trim) "PCSystemType=2" }}
    {{ $isLaptop = true }}
  {{ end }}
{{ else if stdinIsATTY }}
  {{ $isLaptop = promptBoolOnce . "isLaptop" "Is this a laptop" false }}
{{ end }}

{{ $catppuccinFlavor := "" }}
{{ if eq $theme "dark" }}
  {{ $catppuccinFlavor = $catppuccinDarkFlavour }}
{{ else }}
  {{ $catppuccinFlavor = $catppuccinLightFlavour }}
{{ end }}

{{/* Set editor based on environment */}}

{{ $editCommand := "code" }}
{{ $editArgs := list "--wait" }}
{{ $diffCommand := "code" }}
{{ $diffArgs := list "--wait" "--diff" "{{ .Destination }}" "{{ .Target }}" }}
{{ $mergeCommand := "" }}  {{/* Declare with an initial value */}}
{{ $mergeArgs := list }}   {{/* Declare with an initial value */}}

{{ if eq .chezmoi.os "windows" }}
  {{ $mergeCommand = "powershell.exe" }}  {{/* Use = not := */}}
  {{ $mergeArgs = list "-Command" "Copy-Item -Path '{{ .Target }}' -Destination '{{ .Target }}.base' -Force; code --wait --new-window --merge '{{ .Destination }}' '{{ .Target }}' '{{ .Target }}.base' '{{ .Source }}'" }}
{{ else }}
  {{ $mergeCommand = "bash" }}  {{/* Use = not := */}}
  {{ $mergeArgs = list "-c" "cp '{{ .Target }}' '{{ .Target }}.base' && code --wait --new-window --merge '{{ .Destination }}' '{{ .Target }}' '{{ .Target }}.base' '{{ .Source }}'" }}
{{ end }}

{{ if $isHeadless }}
  {{ $editCommand = "nvim" }}
  {{ $editArgs = list }}
  {{ $diffCommand = "nvim" }}
  {{ $diffArgs = list "-d" }}
  {{ $mergeCommand = "nvim" }}
  {{ $mergeArgs = list "-d" "{{ .Destination }}" "{{ .Source }}" }}
{{ else if or $isContainer $isCloud }}
  {{ $editCommand = "vim" }}
  {{ $editArgs = list }}
  {{ $diffCommand = "vimdiff" }}
  {{ $diffArgs = list }}
  {{ $mergeCommand = "vim" }}
  {{ $mergeArgs = list "-d" "{{ .Destination }}" "{{ .Source }}" }}
{{ end }}

{{ if and $isWSL (not $isHeadless) (not $isContainer) (not $isCloud) }}
  {{ $editCommand = "code" }}
  {{ $editArgs = list "--wait" }}
  {{ $diffCommand = "code" }}
  {{ $diffArgs = list "--wait" "--diff" "{{ .Destination }}" "{{ .Target }}" }}
  {{ $mergeCommand = "bash" }}
  {{ $mergeArgs = list "-c" "cp {{ .Target }} {{ .Target }}.base && code --wait --new-window --merge {{ .Destination }} {{ .Target }} {{ .Target }}.base {{ .Source }}" }}
{{ end }}

encryption = "age" # age, rage, gpg
mode = "file" # file, symlink
progress = true

[data]
theme = {{ $theme | quote }}
catppuccinLightFlavour = {{ $catppuccinLightFlavour | quote }}
catppuccinDarkFlavour = {{ $catppuccinDarkFlavour | quote }}
catppuccinFlavor = {{ $catppuccinFlavor | quote }}
catppuccinFlavorTitle = {{ $catppuccinFlavor | title | quote }}
catppuccinAccentColor = {{ $catppuccinAccentColor | quote }}
email = {{ $email | quote }}
gpgId = {{ $gpgId | quote }}
sshId = {{ $sshId | quote }}
osId = {{ $osId | quote }}
isLaptop = {{ $isLaptop }}
isWSL = {{ $isWSL }}
isHeadless = {{ $isHeadless }}
isCloud = {{ $isCloud }}
isContainer = {{ $isContainer }}
opType = {{ $opType | quote }}
githubUsername = "cwelsys"
{{ if eq .chezmoi.os "windows" }}
radarr = {{ onepasswordRead "op://Secrets/Radarr/api" | quote }}
sonarr = {{ onepasswordRead "op://Secrets/Sonarr/api" | quote }}
wapi = {{ onepasswordRead "op://Secrets/Yasb/wapi" | quote}}
gpat = {{ onepasswordRead "op://Secrets/Yasb/gpat" | quote }}
{{ end }}

[data.catppuccin]
accentColors = [ {{ $catppuccinAccentColors | quoteList | join ", " }} ]
flavors = [ {{ $catppuccinFlavors | quoteList | join ", " }} ]

[age]
    identity = "~/.config/.key"
    recipient = {{ $agePubKey | quote }}

[gpg]
recipient = {{ $gpgId | quote }}
args = ["--quiet"]

[git]
autoAdd = true
autoCommit = false
autoPush = false

[cd]
command = {{ $shell | quote }}

[edit]
command = {{ $editCommand | quote }}
args = [{{ range $editArgs }}{{ . | quote }}, {{ end }}]
watch = true

[diff]
command = {{ $diffCommand | quote }}
args = [{{ range $diffArgs }}{{ . | quote }}, {{ end }}]

[merge]
command = {{ $mergeCommand | quote }}
args = [{{ range $mergeArgs }}{{ . | quote }}, {{ end }}]

[interpreters.ps1]
    command = "pwsh"
    args = ["-NoLogo"]

[onepassword]
    mode = {{ $opType | quote }}


