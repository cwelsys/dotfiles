#!/bin/bash

set -eufo pipefail

sudo dseditgroup -o edit -a cwel -t user wheel

{{- $brewPrefix := "/opt/homebrew" }}
{{- $brewBin := "/opt/homebrew/bin/brew" }}
{{- if lookPath "/usr/local/bin/brew" }}
{{-   $brewPrefix = "/usr/local" }}
{{-   $brewBin = "/usr/local/bin/brew" }}
{{- end }}

# Create /etc/zprofile for XDG Base Directories (similar to Linux /etc/profile.d/)
# This ensures all login shells including SSH have XDG variables set
sudo tee /etc/zprofile > /dev/null << 'EOF'
# XDG Base Directory Specification
# Loaded for all login shells including SSH sessions

export XDG_CONFIG_HOME="${XDG_CONFIG_HOME:-$HOME/.config}"
export XDG_CACHE_HOME="${XDG_CACHE_HOME:-$HOME/.cache}"
export XDG_DATA_HOME="${XDG_DATA_HOME:-$HOME/.local/share}"
export XDG_STATE_HOME="${XDG_STATE_HOME:-$HOME/.local/state}"
export XDG_BIN_HOME="${XDG_BIN_HOME:-$HOME/.local/bin}"
export XDG_PROJECTS_DIR="${XDG_PROJECTS_DIR:-$HOME/Projects}"
EOF

echo "zprofile (/etc/zprofile) configured with XDG Base Directories"

sudo tee /etc/zshenv > /dev/null << 'EOF'
export ZDOTDIR="${XDG_CONFIG_HOME:-$HOME/.config}/zsh"
EOF

echo "zshenv (/etc/zshenv) configured"

sudo tee /etc/zshrc > /dev/null << 'EOF'
eval "$({{ $brewBin }} shellenv)"
fpath+=("{{ $brewPrefix }}/share/zsh/site-functions")
EOF

echo "zshrc (/etc/zshrc) configured brew at {{ $brewPrefix }}"

if [ -f /etc/bashrc ]; then
    if ! grep -q "BASHRCSOURCED" /etc/bashrc; then
        sudo tee -a /etc/bashrc >/dev/null <<'EOF'

# If not running interactively, don't do anything
[[ $- != *i* ]] && return

# Prevent doublesourcing
if [[ -z "${BASHRCSOURCED}" ]] ; then
  BASHRCSOURCED="Y"
  # the check is bash's default value
  [[ "$PS1" = '\s-\v\$ ' ]] && PS1='[\u@\h \W]\$ '
  case ${TERM} in
    Eterm*|alacritty*|aterm*|foot*|gnome*|konsole*|kterm*|putty*|rxvt*|tmux*|xterm*)
      PROMPT_COMMAND+=('printf "\033]0;%s@%s:%s\007" "${USER}" "${HOSTNAME%%.*}" "${PWD/#$HOME/\~}"')
      ;;
    screen*)
      PROMPT_COMMAND+=('printf "\033_%s@%s:%s\033\\" "${USER}" "${HOSTNAME%%.*}" "${PWD/#$HOME/\~}"')
      ;;
  esac
fi

if [[ -r /usr/share/bash-completion/bash_completion ]]; then
  . /usr/share/bash-completion/bash_completion
fi

# Source user's .bashrc if it exists
if [ -f "$HOME/.bashrc" ]; then
    source "$HOME/.bashrc"
fi
EOF
    fi
fi
