#!/bin/sh

# common shared environment variables
export DOTFILES="$HOME/.local/share/chezmoi/home"
export CATPPUCCIN_FLAVOR='{{ .catppuccinFlavor }}'

# xdg base
export XDG_CONFIG_HOME="$HOME/.config"
export XDG_CACHE_HOME="$HOME/.cache"
export XDG_DATA_HOME="$HOME/.local/share"
export XDG_STATE_HOME="$HOME/.local/state"
export XDG_BIN_HOME="$HOME/.local/bin"
export XDG_PROJECTS_DIR="$HOME/projects"

# personal
export TZ="America/New_York"
export DOMAIN="cwel.sh"

# shell
export LSCOLORS="Gxfxcxdxbxegedabagacad"
export MANPAGER='nvim +Man!'
export LANG='en_US.UTF-8'
export LC_ALL='en_US.UTF-8'
export WORDCHARS='~!#$%^&*(){}[]<>?.+;'
export PROMPT_EOL_MARK=''
export GPG_TTY=$(tty)

{{ if eq .chezmoi.os "linux" }}
export DOCKERM="/opt/docker"
export TZ="America/New_York"
export XDG_CONFIG_DIRS="/etc/xdg"
if [ ! -w ${XDG_RUNTIME_DIR:="/run/user/$UID"} ]; then
	XDG_RUNTIME_DIR=/tmp
fi
export XDG_RUNTIME_DIR
{{ end }}

{{ if eq .chezmoi.hostname "pbox" }}
export RUST="/mnt/media"
export FLASH="/mnt/bool"
export BRICK="/mnt/backup"
{{ end }}

# https://github.com/b3nj5m1n/xdg-ninja
export PASSWORD_STORE_DIR="$XDG_DATA_HOME"/pass
export GNUPGHOME="$XDG_DATA_HOME"/gnupg

# docker
export DOCKER_CONFIG="$XDG_CONFIG_HOME"/docker

# rust
export CARGO_HOME="$XDG_DATA_HOME"/cargo
export RUSTUP_HOME="$XDG_DATA_HOME"/rustup

# brew
# Disable homebrew auto-update for faster homebrew loading
export HOMEBREW_NO_AUTO_UPDATE=1

# dotnet
export DOTNET_CLI_HOME="$XDG_DATA_HOME"/dotnet

# x11 forwarding
export XAUTHORITY="$XDG_STATE_HOME"/.Xauthority

# python
export PYTHONSTARTUP="$XDG_CONFIG_HOME"/python/pythonrc

# pipx
export PIPX_HOME="$XDG_DATA_HOME"/pipx

# atuin
export ATUIN_NOBIND=true

# gradle
GRADLE_USER_HOME="$XDG_DATA_HOME"/gradle

# npm
export NPM_CONFIG_INIT_MODULE="$XDG_CONFIG_HOME"/npm/config/npm-init.js
export NPM_CONFIG_CACHE="$XDG_CACHE_HOME"/npm
export NPM_CONFIG_TMP="$XDG_RUNTIME_DIR"/npm

# go
export GOPATH="$XDG_DATA_HOME"/go
export GOBIN="$GOPATH"/bin
export GO111MODULE=on

# ripgrep
export RIPGREP_CONFIG_PATH="$XDG_CONFIG_HOME/ripgrep/config"

# less
export LESSHISTFILE="$XDG_CACHE_HOME/.lesshsts"

# wget
export WGETRC="$XDG_CONFIG_HOME/wget/wgetrc"

# pager
export PAGER='bat' # 'less', 'more', 'bat', no 'delta'!
export GIT_PAGER='delta' # 'less', 'more', 'bat', 'delta'

# vagrant
if uname -r | grep -q microsoft; then
	export VAGRANT_WSL_ENABLE_WINDOWS_ACCESS="1"

	if command -v wslvar >/dev/null 2>&1; then
		vagrant_windows_path=$(wslpath "$(wslvar USERPROFILE)")
		export VAGRANT_WSL_WINDOWS_ACCESS_USER_HOME_PATH="${vagrant_windows_path}/"
	fi
fi

# pkg-config paths
export PKG_CONFIG_PATH="/usr/lib/x86_64-linux-gnu/pkgconfig/:/usr/share/pkgconfig/"

{{ if .isHeadless }}
if command -v nvim >/dev/null 2>&1; then
    export EDITOR='nvim'
elif command -v nano >/dev/null 2>&1; then
    export EDITOR='nano'
else
    export EDITOR='vi'
fi
{{ else if or .isContainer .isCloud }}
# Container/cloud environment - prefer simpler editors
if command -v nano >/dev/null 2>&1; then
    export EDITOR='nano'
else
    export EDITOR='vi'
fi
{{ else }}
if command -v code >/dev/null 2>&1; then
    export EDITOR='code --wait'
elif command -v nvim >/dev/null 2>&1; then
    export EDITOR='nvim'
elif command -v nano >/dev/null 2>&1; then
    export EDITOR='nano'
else
    export EDITOR='vi'
fi
{{ end }}

export VISUAL="$EDITOR"
