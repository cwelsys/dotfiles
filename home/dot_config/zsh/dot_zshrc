if [[ -o interactive && "$TERM_PROGRAM" != "vscode" ]]; then
  fastfetch
fi

if [[ -r "${XDG_CACHE_HOME:-$HOME/.cache}/p10k-instant-prompt-${(%):-%n}.zsh" ]]; then
  source "${XDG_CACHE_HOME:-$HOME/.cache}/p10k-instant-prompt-${(%):-%n}.zsh"
fi

if [[ -f "/home/linuxbrew/.linuxbrew/bin/brew" ]]; then
  eval "$(/home/linuxbrew/.linuxbrew/bin/brew shellenv)"
fi

if [[ -f "/opt/homebrew/bin/brew" ]]; then
  eval "$(/opt/homebrew/bin/brew shellenv)"
fi

eval "$(aliae init zsh --config "$HOME/.config/aliae.yaml")"

ZINIT_HOME="${XDG_DATA_HOME:-${HOME}/.local/share}/zinit/zinit.git"

if [[ ! -d "${ZINIT_HOME}" ]]; then
  mkdir -p "$(dirname "$ZINIT_HOME")"
  git clone https://github.com/zdharma-continuum/zinit.git "${ZINIT_HOME}"
fi

source "${ZINIT_HOME}/zinit.zsh"

if [ -d "$ZDOTDIR/lib" ]; then
  for file in "$ZDOTDIR/lib/"*.zsh; do
    source "$file"
  done
  unset file
fi

if [ ! -d "$XDG_STATE_HOME/zsh" ]; then
  mkdir -p "$XDG_STATE_HOME/zsh"
fi

if [ -f "$HOME/.zsh_history" ] && [ ! -f "$XDG_STATE_HOME/zsh/history" ]; then
  mv "$HOME/.zsh_history" "$XDG_STATE_HOME/zsh/history"
fi

[ -z "$HISTFILE" ] && export HISTFILE="$XDG_STATE_HOME/zsh/history"

if command -v wsl2-ssh-agent &> /dev/null; then
  eval "$(wsl2-ssh-agent)"
fi

zinit ice depth=1; zinit light romkatv/powerlevel10k
zinit light ryanccn/vivid-zsh

if [ "$(uname)" = "Darwin" ]; then
omzPlugin macos
else
omzPlugin systemd
fi
omzLib git.zsh
omzPlugin sudo
omzPlugin colored-man-pages
omzPlugin rsync
omzPlugin gpg-agent
omzPlugin git
omzPlugin mise
omzPlugin git-flow wait"1"
omzPlugin github wait"1"
omzPlugin command-not-found wait"1"
omzPlugin zoxide

zinit ice as"command" from"gh-r" bpick"atuin-*.tar.gz" mv"atuin*/atuin -> atuin" \
    atclone"./atuin init zsh > init.zsh; ./atuin gen-completions --shell zsh > _atuin" \
    atpull"%atclone" src"init.zsh" \
    atload'
    bindkey "^E" _atuin_search_widget
    export ATUIN_NOBIND="true"
    '
zinit light atuinsh/atuin

zinit ice wait"1" lucid
zinit light denisidoro/navi
zinit light trystan2k/zsh-tab-title
zinit light reegnz/jq-zsh-plugin
zinit ice wait"1" lucid
zinit light laggardkernel/zsh-thefuck
zinit ice wait"1" lucid
zinit light paulirish/git-open

zinit wait lucid as"completion" for \
    OMZP::docker/completions/_docker \
    OMZP::docker-compose/_docker-compose

zinit light zdharma-continuum/fast-syntax-highlighting
zinit light Aloxaf/fzf-tab
zinit light zsh-users/zsh-autosuggestions
zinit light zsh-users/zsh-syntax-highlighting
zinit light zsh-users/zsh-completions

autoload -Uz compinit && compinit
zinit cdreplay -q

ZSH_AUTOSUGGEST_HIGHLIGHT_STYLE=fg=247
ZSH_AUTOSUGGEST_BUFFER_MAX_SIZE=20
ZSH_AUTOSUGGEST_USE_ASYNC=true
MATCH_PREV_CM=true

zstyle ":completion:*" matcher-list "" "m:{a-z}={A-Z}" "m:{a-zA-Z}={A-Za-z}" "r:|[._-]=* r:|=* l:|=*"
zstyle ':completion:*:git-checkout:*' sort false
zstyle ':completion:*:descriptions' format '[%d]'
zstyle ':completion:*' list-colors "${(s.:.)LS_COLORS}"
zstyle ':completion:*' menu no
zstyle ':fzf-tab:*' fzf-flags --color=fg:1,fg+:2 --bind=tab:accept
zstyle ':fzf-tab:complete:cd:*' fzf-preview 'eza --icons --group-directories-first --color=always --git --oneline --all $realpath'
zstyle ':fzf-tab:*' use-fzf-default-opts yes
zstyle ':fzf-tab:*' switch-group ',' '.'

setopt hist_ignore_all_dups # remove older duplicate entries from history
setopt hist_reduce_blanks # remove superfluous blanks from history items
setopt inc_append_history # save history entries as soon as they are entered
setopt share_history # share history between different instances of the shell
setopt auto_list # automatically list choices on ambiguous completion
setopt auto_menu # automatically use menu completion
setopt hist_verify # verify history expansion before executing
setopt auto_cd
setopt multios
setopt menu_complete
setopt completealiases
setopt no_nomatch
setopt prompt_subst
setopt interactive_comments # allow comments in interactive shells
unsetopt beep

bindkey ' ' magic-space
bindkey '^[[3~' delete-char
bindkey '^[[1;5D' beginning-of-line
bindkey '^[[1;5C' end-of-line
bindkey "^N" insert-last-word
bindkey '^[w' kill-region
bindkey '^Y' redo

HISTSIZE=290000
SAVEHIST=$HISTSIZE
HISTDUP=erase

if [[ -f ~/.config/zsh/.p10k.zsh ]]; then
  source ~/.config/zsh/.p10k.zsh
elif [[ -v commands[starship] ]]; then
	function set_win_title() {
		local cwd="$PWD"
		if [[ "$cwd" == "$HOME"* ]]; then
			cwd="~${cwd#$HOME}"
		fi
		echo -ne "\033]0;$(basename "$cwd")\007"
	}
	starship_precmd_user_func="set_win_title"
  eval "$(starship init zsh)"
elif [[ -v commands['oh-my-posh'] ]]; then
  eval "$(oh-my-posh init zsh --config "$HOME"/.config/posh.toml)"
fi
