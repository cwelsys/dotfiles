# 🐶 FastFetch
if [[ -o interactive && "$TERM_PROGRAM" != "vscode" ]]; then
  fastfetch
fi

export ATUIN_NOBIND="true"

# 🚬 source
[ -f "${HOME}/.config/shared/init.sh" ] && source "${HOME}/.config/shared/init.sh"

if [ -d "$ZDOTDIR/lib" ]; then
  for file in "$ZDOTDIR/lib/"*.zsh; do
    source "$file"
  done
  unset file
fi
[ -d "${ZDOTDIR}/functions" ] && fpath+=${ZDOTDIR}/functions
[ -d "${ZDOTDIR}/completions" ] && fpath+=${ZDOTDIR}/completions

typeset -aU path

# 🐚 Prompt
if [[ -v commands['oh-my-posh'] ]]; then
  eval "$(oh-my-posh init zsh --config $HOME/.config/zen.toml)"
elif [[ -v commands[starship] ]]; then
  eval "$(starship init zsh)"
fi

# 🚀 zinit

export ZINIT_HOME="${XDG_DATA_HOME:-${HOME}/.local/share}/zinit/zinit.git"
if [ ! -d "$ZINIT_HOME" ]; then
  mkdir -p "$(dirname $ZINIT_HOME)"
  git clone https://github.com/zdharma-continuum/zinit.git "$ZINIT_HOME"
fi
source "${ZINIT_HOME}/zinit.zsh"

zinit snippet ${ZDOTDIR}/mocha-syntax.zsh
zinit light zsh-users/zsh-syntax-highlighting
zinit light zsh-users/zsh-completions
zinit light zsh-users/zsh-autosuggestions
zinit light atuinsh/atuin
zinit ice as"command" from"gh-r" bpick"atuin-*.tar.gz" mv"atuin*/atuin -> atuin" \
  atclone"./atuin init zsh > init.zsh --disable-up-arrow --disable-ctrl-r; ./atuin gen-completions --shell zsh > _atuin" \
  atpull"%atclone" src"init.zsh"
zinit light Aloxaf/fzf-tab
zinit snippet OMZL::git.zsh
zinit snippet OMZP::rsync
zinit snippet OMZP::eza
zinit snippet OMZP::tmux
zinit snippet OMZP::git
zinit snippet OMZP::sudo
zinit snippet OMZP::command-not-found

autoload -Uz compinit && compinit

zinit cdreplay -q

# history
export HISTFILE="$XDG_STATE_HOME"/zsh/history
HISTSIZE=4096
SAVEHIST=$HISTSIZE
HISTDUP=erase

# options
setopt autocd
setopt appendhistory
setopt sharehistory
setopt hist_ignore_space
setopt hist_ignore_all_dups
setopt hist_save_no_dups
setopt hist_ignore_dups
setopt hist_find_no_dups
unsetopt beep

# stoyles
zstyle ':completion:*' matcher-list 'm:{a-zA-Z}={A-Za-z}' 'r:|[._-]=* r:|=*' 'l:|=* r:|=*'
zstyle ':completion:*' list-colors '${LS_COLORS}'
zstyle ':completion:*' menu no
zstyle ':fzf-tab:complete:cd:*' fzf-preview 'eza -1 --color=always $realpath'
zstyle ':fzf-tab:complete:__zoxide_z:*' fzf-preview 'ls --color $realpath'
zstyle ':fzf-tab:*' use-fzf-default-opts yes
zstyle ':fzf-tab:*' switch-group '<' '>'

# keybinds
bindkey -e
bindkey '^f' fdz-widget
bindkey '^g' rgz-widget
bindkey '^p' history-search-backward
bindkey '^n' history-search-forward
bindkey '^[w' kill-region
bindkey ' ' magic-space
bindkey '^U' backward-kill-line
bindkey '^[[3;5~' kill-word
bindkey '^[[3~' delete-char
bindkey '^[[1;5C' forward-word
bindkey '^[[1;5D' backward-word
bindkey '^[[5~' beginning-of-buffer-or-history
bindkey '^[[6~' end-of-buffer-or-history
bindkey '^[[H' beginning-of-line
bindkey '^[[F' end-of-line
bindkey '^[[Z' undo
bindkey '^[[A' history-search-up
bindkey '^[OA' history-search-up
bindkey '^[[B' history-search-down
bindkey '^[OB' history-search-down

# hooks

if [[ -v commands[fzf] ]]; then
  eval "$(fzf --zsh)"
fi

if [[ -v commands[zoxide] ]]; then
  eval "$(zoxide init zsh --cmd cd)"
fi

if [[ -n "$SSH_CONNECTION" ]]; then
  export DISPLAY=wini:0
fi

if [ "$VSCODE_INJECTION" = "1" ]; then
  export EDITOR="code --wait"
fi

if [[ -v commands[mise] ]]; then
  eval "$(mise activate zsh)"
fi
