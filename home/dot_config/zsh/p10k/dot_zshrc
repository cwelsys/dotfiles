# 🐶 FastFetch
if [[ -o interactive && "$TERM_PROGRAM" != "vscode" ]]; then
  fastfetch
fi

# 🐚 Prompt
if [[ -r "$HOME/.cache}/p10k-instant-prompt-$USER.zsh" ]]; then
  source "$HOME/.cache}/p10k-instant-prompt-$USER.zsh"
fi

# 🚬 source
[ -f "${HOME}/.config/shared/init.sh" ] && source "${HOME}/.config/shared/init.sh"

if [ -d "$ZDOTDIR/lib" ]; then
  for file in "$ZDOTDIR/lib/"*.zsh; do
    source "$file"
  done
  unset file
fi
[ -d "${ZDOTDIR}/functions" ] && fpath+=${ZDOTDIR}/functions
[ -d "${ZDOTDIR}/completions" ] && fpath+=${ZDOTDIR}/completions

typeset -aU path

# 🚀 zinit
export ZINIT_HOME="${XDG_DATA_HOME:-${HOME}/.local/share}/zinit/zinit.git"
if [ ! -d "$ZINIT_HOME" ]; then
  mkdir -p "$(dirname $ZINIT_HOME)"
  git clone https://github.com/zdharma-continuum/zinit.git "$ZINIT_HOME"
fi
source "${ZINIT_HOME}/zinit.zsh"

zinit ice depth=1
zinit light romkatv/powerlevel10k
zinit snippet ${ZDOTDIR}/mocha-syntax.zsh
zinit light zsh-users/zsh-syntax-highlighting
zinit light zsh-users/zsh-completions
zinit light zsh-users/zsh-autosuggestions
zinit light Aloxaf/fzf-tab
zinit ice as"command" from"gh-r" bpick"atuin-*.tar.gz" mv"atuin*/atuin -> atuin" \
  atclone"./atuin init zsh > init.zsh --disable-up-arrow --disable-ctrl-r; ./atuin gen-completions --shell zsh > _atuin" \
  atpull"%atclone" src"init.zsh"
zinit light atuinsh/atuin
zinit snippet OMZL::git.zsh
zinit snippet OMZP::rsync
zinit snippet OMZP::eza
zinit snippet OMZP::tmux
zinit snippet OMZP::git
zinit snippet OMZP::sudo
zinit snippet OMZP::command-not-found

autoload -Uz compinit && compinit

zinit cdreplay -q

[[ ! -f $ZDOTDIR/p10k/.p10k.zsh ]] || source $ZDOTDIR/p10k/.p10k.zsh

# zsh options
export HISTFILE="$XDG_STATE_HOME"/zsh/history
HISTSIZE=4096
SAVEHIST=$HISTSIZE
HISTDUP=erase

setopt autocd
setopt appendhistory
setopt sharehistory
setopt hist_ignore_space
setopt hist_ignore_all_dups
setopt hist_save_no_dups
setopt hist_ignore_dups
setopt hist_find_no_dups
unsetopt beep

if [[ -v commands[fzf] ]]; then
  eval "$(fzf --zsh)"
fi

if [[ -v commands[zoxide] ]]; then
  eval "$(zoxide init zsh --cmd cd)"
fi

if [[ -n "$SSH_CONNECTION" ]]; then
  export DISPLAY=wini:0
fi

if [ "$VSCODE_INJECTION" = "1" ]; then
  export EDITOR="code --wait"
fi

if [[ -v commands[mise] ]]; then
  eval "$(mise activate zsh)"
fi
