# yaml-language-server: $schema=https://aliae.dev/schema.json
# docs: https://aliae.dev/docs
alias:
  - name: ".."
    value: cd ..
  - name: "…"
    value: cd ../..
  - name: "…."
    value: cd ../../..
  - name: "….."
    value: cd ../../../..
  - name: c
    value: clear
  - name: ld
    value: lazydocker
  - name: lg
    value: lazygit
  - name: dog
    value: doggo $1
  - name: dig
    value: doggo $1
    if hasCommand: "doggo"
  - name: top
    value: btop
  - name: lj
    value: lazyjournal
  - name: mg
    value: magick
  - name: tf
    value: fuck
    if: hasCommand "thefuck"
  - name: tg
    value: topgrade
  - name: fet
    value: fastfetch
  - name: adb
    value: 'HOME="$XDG_DATA_HOME"/android adb'
  - name: v
    value: nvim
    if: hasCommand "nvim"
  - name: vi
    value: nvim
    if: hasCommand "nvim"
  - name: vim
    value: nvim
    if: hasCommand "nvim"
  - name: rl
    type: function
    value: |
      {{ "{{" }} if match .Shell "pwsh" {{ "}}" }}
        Import-Profile
      {{ "{{" }} else if match .Shell "nu" {{ "}}" }}
        nu
      {{ "{{" }} else {{ "}}" }}
        exec $SHELL -l
      {{ "{{" }} end {{ "}}" }}
  - name: cdc
    type: function
    value: cd {{ .chezmoi.homeDir }}/.config
  - name: cdcm
    type: function
    value: cd {{ .chezmoi.sourceDir }}
  - name: cdw
    value: cd {{ env "WIN_HOME" }}
    if: env "WSLENV"
  - name: qq
    type: function
    value: |
      exit
    if: match .Shell "pwsh"
  - name: qq
    value: exit
    if: ne .Shell "pwsh"
  - name: pwsh
    value: pwsh -NoLogo
    if: and (ne .OS "windows") (hasCommand "pwsh")
  - name: cp
    value: 'cp -i'
    if: hasCommand "cp"
  - name: mv
    value: 'mv -i'
    if: hasCommand "mv"
  - name: rcp
    value: rsync --recursive --times --progress --stats --human-readable
    if: hasCommand "rsync"
  - name: rmv
    value: rsync --recursive --times --progress --stats --human-readable --remove-source-files
    if: hasCommand "rsync"
  - name: s
    value: sudo
    if: hasCommand "sudo"
  - name: se
    value: 'sudo -e'
    if: hasCommand "sudo"
  - name: sudo
    value: 'sudo '
    if: hasCommand "sudo"
  - name: su
    value: sudo su
    if: ne .OS "windows"
  - name: x
    value: 'chmod +x'
    if: hasCommand "chmod"
  - name: yt
    value: 'yt-dlp'
    if: hasCommand "yt-dlp"
  - name: e
    value: Invoke-Item .
    type: function
    if: match .Shell "pwsh"
  - name: e
    value: open .
    type: function
    if: match .OS "darwin"
  - name: e
    value: xdg-open .
    type: function
    if: hasCommand "xdg-open"
  - name: xo
    value 'xdg-open'
    if: hasCommand "xdg-open"
  - name: npm-ls
    value: npm list -g
  - name: pnpm-ls
    value: pnpm list -g
  - name: bun-ls
    value: bun pm ls -g
  - name: go-ls
    value: go-global-update --dry-runs
  - name: cm
    value: chezmoi
  - name: cma
    value: chezmoi add
  - name: cme
    value: chezmoi edit
  - name: cmu
    value: chezmoi update
  - name: cmapl
    value: chezmoi apply
  - name: cmra
    value: chezmoi re-add
  - name: cat
    value: bat --paging=never --style=plain
  - name: cpu
    value: fastfetch --logo none --structure cpu
  - name: gpu
    value: fastfetch --logo none --structure gpu
  - name: ram
    value: fastfetch --logo none --structure memory
  - name: osinfo
    value: fastfetch --logo none --structure os
  - name: sysinfo
    value: fastfetch -c all
  - name: mobo
    value: fastfetch --logo none --structure board
  - name: ls
    value: eza --git --group --hyperlink --group-directories-first --time-style=long-iso --color-scale=all --icons -I="*NTUSER.DAT*|*ntuser.dat*|.DS_Store|.idea|.venv|.vs|__pycache__|cache|debug|.git|node_modules|venv"
  - name: l
    value: eza --git-ignore --git --group --hyperlink --group-directories-first --time-style=long-iso --color-scale=all --icons -I="*NTUSER.DAT*|*ntuser.dat*|.DS_Store|.idea|.venv|.vs|__pycache__|cache|debug|.git|node_modules|venv"
  - name: ll
    value: eza --all --header --long --git --group --hyperlink --group-directories-first --time-style=long-iso --color-scale=all --icons -I="*NTUSER.DAT*|*ntuser.dat*|.DS_Store|.idea|.venv|.vs|__pycache__|cache|debug|.git|node_modules|venv"
  - name: la
    value: eza -lbhHigUmuSa
  - name: lo
    value: eza --oneline --git --group --hyperlink --group-directories-first --time-style=long-iso --color-scale=all --icons -I="*NTUSER.DAT*|*ntuser.dat*|.DS_Store|.idea|.venv|.vs|__pycache__|cache|debug|.git|node_modules|venv"
  - name: lx
    value: eza -lbhHigUmuSa@
  - name: tree
    value: eza --tree --git --group --hyperlink --group-directories-first --time-style=long-iso --color-scale=all --icons -I="*NTUSER.DAT*|*ntuser.dat*|.DS_Store|.idea|.venv|.vs|__pycache__|cache|debug|.git|node_modules|venv"
  - name: lt
    value: tree
  - name: wget
    value: wget --hsts-file="$XDG_DATA_HOME/wget-hsts"
    if: hasCommand "wget"
  - name: pip
    value: pip3
    if: and (not (hasCommand "pip")) (hasCommand "pip3")
  - name: py
    value: python3
    if: hasCommand "python3"
  - name: venv
    value: 'python3 -m venv '
    if: hasCommand "python3"
  - name: svn
    value: svn --config-dir $XDG_CONFIG_HOME/subversion
    if: hasCommand "svn"
  - name: boo
    value: ghostty +boo
    if: hasCommand "ghostty"
  - name: fonts
    value: ghostty +list-fonts
    if: hasCommand "ghostty"
  - name: cargols
    value: cargo install --list
    if: hasCommand "cargo"
  - name: cargob
    value: cargo-binstall
    if: hasCommand "cargo-binstall"
  - name: cscli
    value: docker exec crowdsec cscli
  - name: occ
    value: docker exec --user www-data nextcloud-aio-nextcloud php occ

  # Windows
  - name: zsh
    value: wsl.exe -e zsh
    if: match .OS "windows"
  - name: fish
    value: wsl.exe -e fish
    if: match .OS "windows"
  - name: su
    value: gsudo
    if: match .OS "windows"

  # pwsh
  - name: os
    value: Out-String
    if: match .Shell "pwsh"
  - name: keys
    value: Get-PSReadLineKeyHandler
    if: match .Shell "pwsh"
  - name: clip
    value: Set-Clipboard
    if: match .Shell "pwsh"
  - name: psget
    value: Install-Module
    if: match .Shell "pwsh"
  - name: json
    value: ConvertTo-Json
    if: match .Shell "pwsh"
  - name: unjson
    value: ConvertFrom-Json
    if: match .Shell "pwsh"
  - name: GET
    value: Invoke-RestMethodGet
    if: match .Shell "pwsh"
  - name: HEAD
    value: Invoke-RestMethodHead
    if: match .Shell "pwsh"
  - name: POST
    value: Invoke-RestMethodPost
    if: match .Shell "pwsh"
  - name: PUT
    value: Invoke-RestMethodPut
    if: match .Shell "pwsh"
  - name: DELETE
    value: Invoke-RestMethodDelete
    if: match .Shell "pwsh"
  - name: TRACE
    value: Invoke-RestMethodTrace
    if: match .Shell "pwsh"
  - name: OPTIONS
    value: Invoke-RestMethodOptions
    if: match .Shell "pwsh"
  - name: winutil
    value: iwr -useb https://christitus.com/win | iex
    type: function
    if: and (eq .OS "windows") (eq .Shell "pwsh")
  - name: getnf
    value: |
      & ([scriptblock]::Create((iwr 'https://to.loredo.me/Install-NerdFont.ps1')))
    type: function
    if: and (eq .OS "windows") (eq .Shell "pwsh")
  - name: ms-activate
    value: irm https://get.activated.win | iex
    type: function
    if: and (eq .OS "windows") (eq .Shell "pwsh")

  # Linux
  - name: sy
    value: systemctl
    if: match .OS "linux"
  - name: syu
    value: systemctl --user
    if: match .OS "linux"
  - name: sydr
    value: systemctl daemon-reload
    if: match .OS "linux"
  - name: sydru
    value: systemctl daemon-reload --user
    if: match .OS "linux"
  - name: syd
    value: systemctl disable
    if: match .OS "linux"
  - name: sydu
    value: systemctl disable --user
    if: match .OS "linux"
  - name: sye
    value: systemctl enable
    if: match .OS "linux"
  - name: syeu
    value: systemctl enable --user
    if: match .OS "linux"
  - name: syr
    value: systemctl restart
    if: match .OS "linux"
  - name: syru
    value: systemctl restart --user
    if: match .OS "linux"
  - name: syst
    value: systemctl start
    if: match .OS "linux"
  - name: systu
    value: systemctl start --user
    if: match .OS "linux"
  - name: sys
    value: systemctl status
    if: match .OS "linux"
  - name: sysu
    value: systemctl status --user
    if: match .OS "linux"
  - name: syz
    value: systemctl stop
    if: match .OS "linux"
  - name: syzu
    value: systemctl stop --user
    if: match .OS "linux"
  - name: syudr
    value: systemctl --user daemon-reload
    if: match .OS "linux"
  - name: syud
    value: systemctl --user disable
    if: match .OS "linux"
  - name: syue
    value: systemctl --user enable
    if: match .OS "linux"
  - name: syur
    value: systemctl --user restart
    if: match .OS "linux"
  - name: syust
    value: systemctl --user start
    if: match .OS "linux"
  - name: syus
    value: systemctl --user status
    if: match .OS "linux"
  - name: syuz
    value: systemctl --user stop
    if: match .OS "linux"
  - name: failed
    value: sudo systemctl list-units --failed
    if: match .OS "linux"
  - name: jc
    value: journalctl -r
    if: match .OS "linux"
  - name: jcu
    value: journalctl -r --user
    if: match .OS "linux"
  - name: psg
    value: 'ps aux | egrep -i'
    if: hasCommand "ps"
  - name: iotop
    value: 'sudo iotop --delay 2'
    if: match .OS "linux"
  - name: jq
    value: 'jq -C'
    if: hasCommand "jq"
  - name: jl
    value: 'jq -C | less'
    if: hasCommand "jq"
  - name: fgrep
    value: 'fgrep --color=auto'
    if: hasCommand "fgrep"
  - name: egrep
    value: 'egrep --color=auto'
    if: hasCommand "egrep"
  - name: fp
    value: flatpak
    if: hasCommand "flatpak"

  # Package Managers
  - name: update
    value: brew update && brew upgrade
    if: and (eq .OS "darwin") (ne .Shell "nu")
  - name: update
    type: function
    value: brew update; brew upgrade
    if: and (eq .OS "darwin") (eq .Shell "nu")
  - name: install
    value: brew install
    if: match .OS "darwin"
  - name: list
    value: brew list
    if: match .OS "darwin"
  - name: clean
    value: brew cleanup
    if: match .OS "darwin"
  - name: remove
    value: brew uninstall
    if: match .OS "darwin"
  - name: search
    value: brew search
    if: match .OS "darwin"
  - name: info
    value: brew info
    if: match .OS "darwin"
  - name: cask-get
    value: brew install --cask
    if: match .OS "darwin"
  - name: cask-rm
    value: brew uninstall --cask
    if: match .OS "darwin"
  - name: tap
    value: brew tap
    if: match .OS "darwin"
  - name: untap
    value: brew untap
    if: match .OS "darwin"

  - name: clean
    value: sudo dnf autoremove -y
    if: hasCommand "dnf"
  - name: update
    value: sudo dnf upgrade -y
    if: hasCommand "dnf"
  - name: install
    value: sudo dnf install -y
    if: hasCommand "dnf"
  - name: remove
    value: sudo dnf remove -y
    if: hasCommand "dnf"
  - name: search
    value: dnf search
    if: hasCommand "dnf"
  - name: info
    value: dnf info
    if: hasCommand "dnf"
  - name: dnf
    value: sudo dnf
    if: hasCommand "dnf"

  - name: clean
    value: sudo apt autoremove -y && sudo apt autoclean
    if: hasCommand "apt"
  - name: update
    value: sudo apt update && sudo apt upgrade -y
    if: hasCommand "apt"
  - name: install
    value: sudo apt install -y
    if: hasCommand "apt"
  - name: remove
    value: sudo apt remove -y
    if: hasCommand "apt"
  - name: search
    value: apt search
    if: hasCommand "apt"
  - name: info
    value: apt show
    if: hasCommand "apt"

  - name: clean
    value: sudo zypper clean -a
    if: hasCommand "zypper"
  - name: update
    value: sudo zypper refresh && sudo zypper update -y
    if: hasCommand "zypper"
  - name: install
    value: sudo zypper install -y
    if: hasCommand "zypper"
  - name: remove
    value: sudo zypper remove -y
    if: hasCommand "zypper"
  - name: search
    value: zypper search
    if: hasCommand "zypper"
  - name: info
    value: zypper info
    if: hasCommand "zypper"


  - name: pacman
    value: sudo pacman
    if: hasCommand "pacman"
  - name: clean
    value: yay -Qtdq | yay -Rnsu - --noconfirm 1> /dev/null; yay -Sc --noconfirm
    if: hasCommand "yay"
  - name: pupdate
    value: yay -Syyu --noconfirm
    if: hasCommand "yay"
  - name: install
    value: yay -S $1 --needed --noconfirm
    if: hasCommand "yay"
  - name: remove
    value: yay -Rnsu $1
    if: hasCommand "yay"
  - name: search
    value: yay -Ss $1
    if: hasCommand "yay"
  - name: list
    value: yay -Qq $1
    if: hasCommand "yay"
  - name: in
    value: yay -Slq | fzf -q "$1" -m --preview 'yay -Si {1}' --preview-window 'right,75%,wrap,cycle,<65(down,80%,wrap,cycle)' | xargs -ro yay -S
    if: hasCommand "yay"
  - name: re
    value: yay -Qq | fzf -q "$1" -m --preview 'yay -Qi {1}' --preview-window bottom | xargs -ro yay -Rns
    if: hasCommand "yay"
  - name: delOrphan
    value: sudo pacman -Qtdq | sudo pacman -Rns -
    if: hasCommand "pacman"

env:
  - !include priv.yaml
  - name: XDG_CONFIG_HOME
    value: '{{ .chezmoi.homeDir }}/.config'
    persist: true
  - name: XDG_CACHE_HOME
    value: '{{ .chezmoi.homeDir }}/.cache'
    persist: true
  - name: XDG_DATA_HOME
    value: '{{ .chezmoi.homeDir }}/.local/share'
    persist: true
  - name: XDG_STATE_HOME
    value: '{{ .chezmoi.homeDir }}/.local/state'
    persist: true
  - name: XDG_BIN_HOME
    value: '{{ .chezmoi.homeDir }}/.local/bin'
    persist: true
  - name: XDG_PROJECTS_DIR
    value: '{{ .chezmoi.homeDir }}/Projects'
    persist: true
  - name: DOTS
    value: '{{ .chezmoi.sourceDir }}'
  - name: DOTFILES
    value: '{{ .chezmoi.sourceDir }}'
  - name: EDITOR
    value: nvim
  - name: VISUAL
    value: code --wait
  - name: TZ
    value: America/New_York
  - name: DOMAIN
    value: cwel.sh
  - name: CASA
    value: cwel.casa
  - name: MANPAGER
    value: nvim +Man!
  - name: _ZO_FZF_OPTS
    value: "$FZF_DEFAULT_OPTS --preview 'lsd -LAl --color=always --blocks=permission,user,size,date,name -1 {2..}' --preview-window=down:wrap"
  - name: WORDCHARS
    value: '~!#$%^&*(){}[]<>?.+;'
    if: ne .Shell "fish"
  - name: PROMPT_EOL_MARK
    value: ''
  - name: _JAVA_OPTIONS
    value: "-Djava.util.prefs.userRoot=\"$XDG_CONFIG_HOME\"/java"
    if: hasCommand "java"
  - name: GITHUB_USERNAME
    value: cwelsys
  - name: GPG_TTY
    value: '$(tty)'
    if: ne .OS "windows"
  - name: LANG
    value: en_US.UTF-8
    if: ne .OS "windows"
  - name: LC_ALL
    value: en_US.UTF-8
    if: ne .OS "windows"
  - name: LC_CTYPE
    value: en_US.UTF-8
    if: ne .OS "windows"
  - name: PASSWORD_STORE_DIR
    value: '{{ .chezmoi.homeDir }}/.local/share/pass'
    if: match .OS "linux"
  - name: GNUPGHOME
    value: '{{ .chezmoi.homeDir }}/.local/share/gnupg'
  - name: DOCKER_CONFIG
    value: '{{ .chezmoi.homeDir }}/.config/docker'
  - name: CARGO_HOME
    value: '{{ .chezmoi.homeDir }}/.local/share/cargo'
    persist: true
  - name: RUSTUP_HOME
    value: '{{ .chezmoi.homeDir }}/.local/share/rustup'
    persist: true
  - name: DOTNET_CLI_HOME
    value: '{{ .chezmoi.homeDir }}/.local/share/dotnet'
  - name: DOTNET_CLI_TELEMETRY_OPTOUT
    value: '1'
  - name: DOTNET_ROOT
    value: '{{ .chezmoi.homeDir }}/.local/share/dotnet'
  - name: DOTNET_INSTALL_DIR
    value: '{{ .chezmoi.homeDir }}/.local/share/dotnet'
  - name: XAUTHORITY
    value: '{{ .chezmoi.homeDir }}/.local/state/.Xauthority'
    persist: true
  - name: PYTHONSTARTUP
    value: '{{ .chezmoi.homeDir }}/.config/python/pythonrc'
  - name: PYTHON_HISTORY
    value: '{{ .chezmoi.homeDir }}/.local/share/python/history'
  - name: vivid_theme
    value: catppuccin-mocha
  - name: PIPX_HOME
    value: '{{ .chezmoi.homeDir }}/.local/share/pipx'
  - name: PIPX_GLOBAL_HOME
    value: '{{ .chezmoi.homeDir }}/.local/share/pipx'
  - name: GLOW_STYLE
    value: '{{ .chezmoi.homeDir }}/.config/glow/catppuccin-mocha.json'
  - name: GRADLE_USER_HOME
    value: '{{ .chezmoi.homeDir }}/.local/share/gradle'
  - name: NPM_CONFIG_PREFIX
    value: '{{ env "XDG_DATA_HOME" }}/npm'
  - name: NPM_CONFIG_CACHE
    value: '{{ env "XDG_CACHE_HOME" }}/npm'
  - name: NPM_CONFIG_INIT_MODULE
    value: '{{ env "XDG_CONFIG_HOME" }}/npm/config/npm-init.js'
  - name: NODE_REPL_HISTORY
    value: '{{ .chezmoi.homeDir }}/.local/state/node_repl_history'
  - name: GOPATH
    value: '{{ .chezmoi.homeDir }}/.local/share/go'
    persist: true
  - name: GOBIN
    value: '{{ .chezmoi.homeDir }}/.local/share/go/bin'
    persist: true
  - name: RIPGREP_CONFIG_PATH
    value: '{{ .chezmoi.homeDir }}/.config/ripgrep/config'
  - name: LESSHISTFILE
    value: '{{ .chezmoi.homeDir }}/.cache/lesshsts'
  - name: LESS
    value: '-cgiRF'
  - name: WGETRC
    value: '{{ .chezmoi.homeDir }}/.config/wget/wgetrc'
  - name: PAGER
    value: bat
  - name: GIT_PAGER
    value: delta
  - name: BAT_THEME
    value: Catppuccin Mocha
    if: hasCommand "bat"
  - name: BATDIFF_USE_DELTA
    value: 'true'
    if: hasCommand "bat"
  - name: FZF_COLORS
    value: '--color=bg+:#313244,bg:#1e1e2e,spinner:#f5e0dc --color=hl:#f38ba8,fg:#cdd6f4,header:#f38ba8 --color=info:#94e2d5,pointer:#f5e0dc,marker:#f5e0dc --color=fg+:#cdd6f4,prompt:#94e2d5,hl+:#f38ba8 --color=border:#585b70'
    if: hasCommand "fzf"
  - name: FZF_DEFAULT_OPTS
    value: '$FZF_COLORS --layout=reverse --cycle --height=70% --min-height=20 --border=rounded --info=right --bind=alt-w:toggle-preview-wrap --bind=ctrl-a:toggle-all --bind=?:toggle-preview'
    if: hasCommand "fzf"
  - name: FZF_DEFAULT_COMMAND
    value: "fd --one-file-system --strip-cwd-prefix --follow --hidden --exclude '.git' --exclude 'node_modules' --exclude '.var'"
    if: hasCommand "fzf"
  - name: FZF_CTRL_T_COMMAND
    value: "$FZF_DEFAULT_COMMAND --type f --type d"
    if: hasCommand "fzf"
  - name: FZF_ALT_C_COMMAND
    value: "$FZF_DEFAULT_COMMAND --type d"
    if: hasCommand "fzf"
  - name: FZF_CTRL_R_OPTS
    value: "$FZF_DEFAULT_OPTS --preview 'echo {}' --preview-window 'down:3:hidden:wrap'"
    if: hasCommand "fzf"
  - name: FZF_ALT_C_OPTS
    value: "$FZF_DEFAULT_OPTS --preview 'lsd -LAl --color=always --blocks=permission,user,size,date,name -1 {}'"
    if: hasCommand "fzf"
  - name: FZF_CTRL_T_OPTS
    value: "$FZF_DEFAULT_OPTS --preview 'less {}' --preview-window 'right:wrap'"
    if: hasCommand "fzf"
  - name: FZF_HISTDIR
    value: '{{ .chezmoi.homeDir }}/.local/share/fzf/history'
  - name: VAGRANT_HOME
    value: '{{ .chezmoi.homeDir }}/.local/share/vagrant'
  - name: WIN_HOME
    value: /mnt/c/users/cwel
    if: env "WSLENV"
  - name: RUST
    value: '/mnt/media'
    if: eq (env "HOSTNAME") "pbox"
  - name: FLASH
    value: '/mnt/bool'
    if: eq (env "HOSTNAME") "pbox"
  - name: BRICK
    value: '/mnt/backup'
    if: eq (env "HOSTNAME") "pbox"
  - name: OP_BIOMETRIC_UNLOCK_ENABLED
    value: 'true'
    if: match .OS "darwin"
  - name: HOMEBREW_NO_ENV_HINTS
    value: 'true'
    if: hasCommand "brew"
  - name: HOMEBREW_BAT
    value: 1
    if: hasCommand "brew"
  - name: HOMEBREW_COLOR
    value: 1
    if: hasCommand "brew"
  - name: HOMEBREW_CLEANUP_MAX_AGE_DAYS
    value: 7
    if: hasCommand "brew"
  - name: HOMEBREW_CLEANUP_PERIODIC_FULL_DAYS
    value: 3
    if: hasCommand "brew"
  - name: HOMEBREW_DOWNLOAD_CONCURRENCY
    value: auto
    if: hasCommand "brew"
  - name: YAZI_CONFIG_HOME
    value: '{{ .chezmoi.homeDir }}/.config/yazi'
    if: match .OS "windows"
  - name: YAZI_FILE_ONE
    value: 'C:/Program Files/Git/usr/bin/file.exe'
    if: match .OS "windows"
    persist: true
  - name: KOMOREBI_CONFIG_HOME
    value: '{{ .chezmoi.homeDir }}/.config/komorebi'
    if: match .OS "windows"
    persist: true
  - name: AWS_CONFIG_FILE
    value: '{{ .chezmoi.homeDir }}/.local/share/aws/config'
  - name: AWS_DATA_PATH
    value: '{{ .chezmoi.homeDir }}/.local/share/aws'
  - name: AWS_SHARED_CREDENTIALS_FILE
    value: '{{ .chezmoi.homeDir }}/.local/share/aws/credentials'
  - name: EZA_CONFIG_DIR
    value: '{{ .chezmoi.homeDir }}/.config/eza'
    if: match .OS "windows"
  - name: VBOX_USER_HOME
    value: '{{ .chezmoi.homeDir }}/.local/share/virtualbox'
    if: match .OS "windows"
    persist: true
  - name: VAGRANT_DEFAULT_PROVIDER
    value: virtualbox
    if: match .OS "windows"
    persist: true
  - name: BAT_CONFIG_DIR
    value: '{{ .chezmoi.homeDir }}/.config/bat'
  - name: BAT_CONFIG_PATH
    value: '{{ .chezmoi.homeDir }}/.config/bat/config'
  - name: CLINK_PROFILE
    value: '{{ .chezmoi.homeDir }}/.config/clink'
    if: match .OS "windows"
    persist: true
  - name: GH_DASH_CONFIG
    value: '{{ .chezmoi.homeDir }}/.config/gh-dash/config.yml'
    if: match .OS "windows"
  - name: YARN_CACHE_FOLDER
    value: '{{ .chezmoi.homeDir }}/.cache/npm'
    if: match .OS "windows"
  - name: PNPM_HOME
    value: '{{ .chezmoi.homeDir }}/.local/share/pnpm'
    if: match .OS "windows"
  - name: RCLONE_CONFIG_DIR
    value: '{{ .chezmoi.homeDir }}/.config/rclone'
    if: match .OS "windows"
    persist: true
  - name: TERMINFO
    value: '{{ .chezmoi.homeDir }}/.local/share/terminfo'
    if: ne .OS "windows"
  - name: TERMINFO_DIRS
    value: '{{ .chezmoi.homeDir }}/.local/share/terminfo:/usr/share/terminfo'
    if: ne .OS "windows"
  - name: CLAUDE_CONFIG_DIR
    value: '{{ .chezmoi.homeDir }}/.config/claude'
  - name: CUDA_CACHE_PATH
    value: '{{ env "XDG_CACHE_HOME" }}/nv'
    if: match .OS "linux"
  - name: GTK2_RC_FILES
    value: /gtk-2.0/gtkrc'
    if: match .OS "linux"
  - name: PARALLEL_HOME
    value: '{{ env "XDG_CONFIG_HOME" }}/parallel'
    if: ne .OS "windows"
  - name: WAKATIME_HOME
    value: '{{ env "XDG_CONFIG_HOME" }}/wakatime'
  - name: CPPFLAGS
    value: "-I/opt/homebrew/opt/openjdk/include"
    if: eq .OS "darwin"
  - name: ANDROID_USER_HOME
    value: '{{ env "XDG_DATA_HOME" }}/android'

path:
  - value: |
      /usr/local/sbin
      /usr/bin
      /usr/local/bin
    if: eq .OS "linux" "darwin"

  - value: |
      /opt/vagrant/bin
      /opt/homebrew/opt/ncurses/bin
      /opt/homebrew/opt/openjdk/bin
    if: eq .OS "darwin"

  - value: '{{ .chezmoi.homeDir }}/bin'
  - value: '{{ .chezmoi.homeDir }}/.local/bin'
  - value: '{{ env "CARGO_HOME" }}/bin'
  - value: '{{ env "GOBIN" }}'
  - value: '{{ env "XDG_DATA_HOME" }}/npm/bin'
