case $- in
*i*) ;;
*) return ;;
esac

if [[ -f "/home/linuxbrew/.linuxbrew/bin/brew" ]]; then
	eval "$(/home/linuxbrew/.linuxbrew/bin/brew shellenv)"
fi

if [[ -f "/opt/homebrew/bin/brew" ]]; then
	eval "$(/opt/homebrew/bin/brew shellenv)"
fi

if grep -qEi "(Microsoft|WSL)" /proc/version &>/dev/null; then
	export ALIAE_WSL=1
fi

eval "$(aliae init bash --config "$HOME/.config/aliae.yaml")"

mkdir -p "$XDG_STATE_HOME/bash"

if [ -f "$HOME/.bash_history" ] && [ ! -f "$XDG_STATE_HOME/bash/history" ]; then
	mv "$HOME/.bash_history" "$XDG_STATE_HOME/bash/history"
fi
[ -z "$HISTFILE" ] && export HISTFILE="$XDG_STATE_HOME/bash/history"

HISTCONTROL=ignoreboth:erasedups
HISTIGNORE="&:[bf]g:c:clear:history:exit:q:pwd:* --help"
HISTFILESIZE=10000
HISTSIZE=$HISTFILESIZE

if [ ! -f ~/.local/share/blesh/ble.sh ]; then
	git clone https://github.com/akinomyoga/ble.sh && make -C ble.sh install
	rm -rf ble.sh
fi

if [ -f ~/.local/share/blesh/ble.sh ]; then
	source ~/.local/share/blesh/ble.sh --noattach
	ble-color-setface auto_complete fg='#6c7086'
	ble-face -s syntax_error fg='#f38ba8'
	bleopt complete_ambiguous=
	ble-import -d integration/fzf-key-bindings
	ble-import -d integration/fzf-completion
fi

bleopt prompt_ps1_final=
bleopt prompt_ps1_transient=

if [ -f "$HOME/.config/bash" ]; then
	for file in ~/.config/bash/*.bash; do
		source "$file"
	done
	unset file
fi

if command -v wsl2-ssh-agent &>/dev/null; then
	eval "$(wsl2-ssh-agent)"
fi

if [[ $BASH_VERSION =~ ^[4-9] ]]; then
	shopt -s autocd
	shopt -s direxpand dirspell
	shopt -s globstar
fi

shopt -s cdspell
shopt -s checkwinsize
shopt -s extglob
shopt -s no_empty_cmd_completion
shopt -s nocaseglob
unset MAILCHECK

if command -v starship >/dev/null 2>&1; then
	eval "$(starship init bash)"
elif command -v oh-my-posh >/dev/null 2>&1; then
	eval "$(oh-my-posh init bash --config "$HOME/.config/posh.toml")"
fi

if [[ -s $HOMEBREW_PREFIX/etc/profile.d/bash_completion.sh ]]; then
	. "$HOMEBREW_PREFIX/etc/profile.d/bash_completion.sh"
fi

if command -v atuin >/dev/null 2>&1; then
	export ATUIN_NOBIND="true"
	eval "$(atuin init bash)"
fi

if command -v fzf >/dev/null 2>&1; then
	eval "$(fzf --bash)"
fi

if command -v navi >/dev/null 2>&1; then
	eval "$(navi widget bash)"
fi

if command -v zoxide >/dev/null 2>&1; then
	eval "$(zoxide init bash --cmd cd)"
fi

[[ ! ${BLE_VERSION-} ]] || ble-attach
